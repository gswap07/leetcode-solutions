//https://leetcode.com/problems/majority-element/submissions/
//Sol 1
class Solution {
    public int majorityElement(int[] nums) {
        if(nums.length==1){
            return nums[0];
        }
        //Arrays.sort(nums);
        
        int count=0;
        int res=0; //res will hold the number with max occurences.
        for(int i=0;i<nums.length;i++){
            
            if(count==0){
                res = nums[i];
                count++;
            } else{
                if((nums[i]) == res){
                    count++;
                }else{
                    count--;
                }
            }
            
            
        }
        
              
        return res;
    }
}

//Sol 2 using xor 
class Solution {
    public int majorityElement(int[] nums) {
        if(nums.length==1){
            return nums[0];
        }
        Arrays.sort(nums);
        
        int count=1;
        
        for(int i=1;i<nums.length;i++){
            if(count > nums.length/2){
                return nums[i-1];
            }
            if((nums[i-1]^nums[i]) == 0){
                count++;
            }else{
                count=1;
            }
        }
        
        if(count > nums.length/2){
                return nums[nums.length-1];
        }
        
        return -1;
    }
}
