//https://leetcode.com/problems/meeting-rooms-ii/
class Solution {
    public int minMeetingRooms(int[][] intervals) {
        Arrays.sort(intervals, (n1,n2) -> Integer.compare(n1[0],n2[0]));
        if(intervals.length==1){
            return 1;
        }
        int count =1;
        PriorityQueue<Integer> pq = new PriorityQueue();
        pq.add(intervals[0][1]);
        for(int i=1; i<intervals.length;i++){
            if(intervals[i][0] < pq.peek()){
                count++;
            } else {
                pq.poll();
            }
            
            pq.add(intervals[i][1]);
        }
        
        return count;
    }
}
